{"version":3,"sources":["components/Header.js","components/MainContainer.jsx","components/Form.jsx","components/Input.jsx","components/PrimaryButton.jsx","context/DataContext.js","components/Step1.jsx","components/Step2.jsx","components/FileInput.jsx","components/Step3.jsx","components/Result.jsx","components/Footer.jsx","components/App.jsx","index.jsx"],"names":["useStyles","makeStyles","theme","root","fontFamily","margin","spacing","textAlign","fontSize","color","textShadow","Header","styles","Typography","className","component","variant","marginTop","display","flexDirection","alignItems","MainContainer","children","props","Container","container","maxWidth","width","Form","noValidate","Input","forwardRef","ref","TextField","inputRef","fullWidth","PrimaryButton","Button","type","DataContext","createContext","DataProvider","useState","data","setData","Provider","value","setValues","values","prevState","resetState","useData","useContext","schema","yup","shape","firstName","matches","required","lastName","Step1","history","useForm","mode","resolver","yupResolver","defaultValues","register","handleSubmit","errors","onSubmit","push","id","label","name","error","helperText","message","email","Step2","phoneNumber","hasPhone","watch","FormControlLabel","control","Checkbox","defaultValue","defaultChecked","onChange","event","target","parsePhoneNumberFromString","formatInternational","normalizePhoneNumber","onClick","backgroundColor","cursor","padding","icon","FileInput","render","onBlur","onDrop","getRootProps","getInputProps","Paper","CloudUpload","List","map","f","index","ListItem","key","ListItemIcon","InsertDriveFile","ListItemText","primary","secondary","size","Step3","files","marginBottom","table","Result","success","setSuccess","entries","Object","filter","entry","a","formData","FormData","forEach","file","append","console","log","encodeURL","url","encodeURIComponent","fetch","method","body","headers","status","Swal","role","aria-label","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","toString","Footer","to","App","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1125ae1a.chunk.js","sourcesContent":["import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\n\n//создаем хук для стилей\nconst useStyles = makeStyles((theme)=>({\n    // theme -темная /светлая темы\n    root: {\n        fontFamily: \"Permanent Marker\",\n        margin: theme.spacing(3,0,2), // отсупы сетки\n        textAlign: \"center\",\n        fontSize: \"40px\",\n        color: \"deeppink\",\n        textShadow: \"1px 1px darkmagenta\"\n    }\n    })\n\n)\nexport const Header = () => {\n    const styles = useStyles();\n    return (\n        <Typography className={styles.root} component={\"h1\"} variant={\"h2\"}> {/* компонент управления стилями */}\n            Форма ввода данных\n        </Typography>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container } from '@material-ui/core';\n\n// кастомный хук для использования стилей\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: theme.spacing(4),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    }\n}));\n\n// MainContainer — окошко панелька на которой все будет рендериться — прямоугольник со скругелнными полями и тенью\n// props для переопределения чего нидь в MainContainer\nexport const MainContainer = ({children, ...props}) => {\n        const styles = useStyles();\n        return (\n            <Container className={styles.root} container={'main'} maxWidth={'xs'} {...props}>\n                { children }\n            </Container>\n        );\n    }\n;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme)=>({\n    root: {\n        width: \"100%\",\n        marginTop: theme.spacing(1),\n    }\n\n}))\n\nexport const Form = ({children, ...props}) => {\n    const styles = useStyles();\n    return (\n        // через пропс настраиваем поведение формы, novalidate- отключение валидации на уровне html\n        <form {...props} noValidate className={styles.root}>\n            {children}\n        </form>\n    );\n}\n\n","import React, { forwardRef } from 'react';\nimport { TextField } from '@material-ui/core';\n\nexport const Input = forwardRef((props, ref) => {\n    return (\n        <TextField\n            variant={\"outlined\"}\n            margin={\"normal\"}\n            inputRef={ref}\n            fullWidth\n            {...props}\n        />\n    );\n});\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\n\n\n// создаем хук стилей\nconst  useStyles = makeStyles((theme)=>({\n    root: {\n        margin: theme.spacing(3,0,2)\n    }\n}))\nexport const PrimaryButton = ({children, ...props}) =>{\n    const styles = useStyles()\n    return (\n        <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            className={styles.root}\n            color=\"primary\"\n            {...props}\n        >\n            {children}\n        </Button>\n    );\n}\n\n","import React, { createContext, useContext, useState } from 'react';\n\n\nconst DataContext = createContext();\n\nfunction DataProvider({children}) {\n    const [data, setData] = useState({});\n\n    const setValues = (values) => {\n        setData((prevState) => ({\n            ...prevState,\n            ...values,\n        }));\n    };\n    const resetState = ()=>{\n        setData({})\n    }\n    return (\n        <DataContext.Provider value={{data, setValues, resetState} }>\n            { children }\n        </DataContext.Provider>\n    );\n}\n\nexport const useData = () => useContext(DataContext);\nexport { DataProvider };\n","import React from 'react';\nimport { MainContainer } from 'components/MainContainer';\nimport { Typography } from '@material-ui/core';\nimport { Form } from 'components/Form';\nimport { Input } from 'components/Input';\nimport { PrimaryButton } from 'components/PrimaryButton';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useData } from 'context/DataContext';\n\nconst schema = yup.object().shape({\n    firstName: yup\n        .string()\n        .matches(/^([^0-9]*)$/, 'Имя не должно содержать цифры')\n        .required('Имя - обязательный параметр'),\n    lastName: yup\n        .string()\n        .matches(/^([^0-9]*)$/, 'Фамилия не должна содержать цифры')\n        .required('Фамилия - обязательный параметр')\n\n});\nexport const Step1 = ({ history }) => {\n    const { data, setValues } = useData(); // наш контекст со стейтом\n    const {\n        register, // ref контроль за формой\n        handleSubmit, // функция обработки данных при сабмите формы\n        errors\n    } = useForm({\n        mode: 'onBlur', // элемент начинает валидацию при расфокусировке\n        resolver: yupResolver(schema),\n        defaultValues: { firstName: data.firstName, lastName: data.lastName }\n    });\n    const onSubmit = (values) => {\n        setValues(values); // данные сохраняем в контекст на каждом шаге\n        history.push('/step2');\n    };\n    return (\n        <MainContainer>\n            {' '}\n            {/* MainContainer — окошко панелька на которой все будет рендериться,\n         прямоугольник со скругелнными полями и тенью */ }\n            <Typography component=\"h2\" variant=\"h5\">Шаг 1</Typography>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <Input\n                    ref={register}\n                    id=\"firstName\"\n                    type=\"text\"\n                    label=\"Имя\"\n                    name=\"firstName\" // имя поля данных в объекте handleSubmit\n                    error={!!errors.firstName}\n                    helperText={errors?.firstName?.message}\n                />\n                <Input\n                    ref={register}\n                    id=\"lastName\"\n                    type=\"text\"\n                    label=\"Фамилия\"\n                    name=\"lastName\" // имя поля данных в объекте handleSubmit\n                    error={!!errors.lastName}\n                    helperText={errors?.lastName?.message}\n                />\n                <PrimaryButton>Вперед</PrimaryButton>\n            </Form>\n\n        </MainContainer>\n    );\n};\n","import React from 'react';\nimport { MainContainer } from 'components/MainContainer';\nimport { Typography } from '@material-ui/core';\nimport { Form } from 'components/Form';\nimport { Input } from 'components/Input';\nimport { PrimaryButton } from 'components/PrimaryButton';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { parsePhoneNumberFromString } from 'libphonenumber-js';\nimport { useData } from 'context/DataContext';\n\nconst schema = yup.object().shape({\n    email: yup\n        .string()\n        .email('Email должен быть корректного формата')\n        .required('Email - обязательный параметр')\n\n});\n\nconst normalizePhoneNumber = (value) => {\n    const phoneNumber = parsePhoneNumberFromString(value);\n    if (!phoneNumber) return value;\n    return phoneNumber.formatInternational();\n    // return phoneNumber.formatNational()\n};\n\nexport const Step2 = ({ history }) => {\n    const { data, setValues } = useData(); // наш контекст\n    const {\n        register, // ref контроль за формой\n        handleSubmit, // функция обработки данных при сабмите формы\n        errors,\n        watch\n    } = useForm({\n        mode: 'onBlur', // элемент начинает валидацию при расфокусировке\n        resolver: yupResolver(schema),\n        defaultValues: { email: data.email, phoneNumber: data.phoneNumber, hasPhone: data.hasPhone }\n    });\n    const onSubmit = (values) => {\n        setValues(values); // данные сохраняем в контекст на каждом шаге\n        history.push('/step3');\n    };\n    const hasPhone = watch('hasPhone');\n    return (\n        <MainContainer>\n            {' '}\n            {/* MainContainer — окошко панелька на которой все будет рендериться,\n         прямоугольник со скругелнными полями и тенью */ }\n            <Typography component=\"h2\" variant=\"h5\">Шаг 2</Typography>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <Input\n                    ref={register}\n                    id=\"email\"\n                    type=\"email\"\n                    label=\"Email\"\n                    name=\"email\" // имя поля данных в объекте handleSubmit\n                    required\n                    error={!!errors.email}\n                    helperText={errors?.email?.message}\n                />\n                <FormControlLabel\n                    control={(\n                        <Checkbox\n                            name=\"hasPhone\"\n                            defaultValue={data.hasPhone}\n                            defaultChecked={data.hasPhone}\n                            inputRef={register}\n                            color=\"primary\"\n                        />\n                    )}\n                    label=\"У вас есть номер телефона?\"\n                />\n                {\n                    hasPhone && (\n                        <Input\n                            ref={register}\n                            id=\"phoneNumber\"\n                            type=\"tel\"\n                            label=\"Телефон\"\n                            name=\"phoneNumber\"\n                            onChange={(event) => {\n                                event.target.value = normalizePhoneNumber(event.target.value);\n                            }}\n                        />\n                    )\n                }\n                <PrimaryButton>Дальше</PrimaryButton>\n                <PrimaryButton\n                    type=\"button\"\n                    onClick={() => history.push('/')}\n                    color=\"secondary\"\n                >\n                    Назад\n                </PrimaryButton>\n            </Form>\n\n        </MainContainer>\n    );\n};\n","import React from 'react';\nimport { Controller } from 'react-hook-form';\nimport Dropzone from 'react-dropzone';\nimport { Paper } from '@material-ui/core';\nimport { CloudUpload, InsertDriveFile } from '@material-ui/icons';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: '#eee',\n        textAlign: 'center',\n        cursor: 'pointer',\n        color: '#333',\n        padding: '10px',\n        marginTop: '20px'\n    },\n    icon: {\n        marginTop: '16px',\n        color: '#888',\n        fontSize: '42px'\n    }\n}));\n\nexport const FileInput = ({ control, name }) => {\n    const styles = useStyles();\n    return (\n        <Controller\n            control={control}\n            name={name}\n            defaultValue={[]}\n            render={({ onChange, onBlur, value }) => (\n                <>\n                    <Dropzone onDrop={onChange}>\n                        {\n                            ({ getRootProps, getInputProps }) => (\n                                <Paper className={styles.root} variant=\"outlined\" {...getRootProps()}>\n                                    <CloudUpload className={styles.icon} />\n                                    <input {...getInputProps()} name={name} onBlur={onBlur} />\n                                    <p>Перетащите сюда файлы или нажмите для выбора</p>\n                                </Paper>\n                            )\n                        }\n                    </Dropzone>\n                    <List>\n                        {\n                            value.map((f, index) => (\n                                <ListItem key={index}>\n                                    <ListItemIcon>\n                                        <InsertDriveFile />\n                                    </ListItemIcon>\n                                    <ListItemText primary={f.name} secondary={f.size} />\n                                </ListItem>\n                            ))\n                        }\n                    </List>\n\n                </>\n            )}\n        />\n\n    );\n};\n","import React from 'react';\nimport { MainContainer } from 'components/MainContainer';\nimport { Typography } from '@material-ui/core';\nimport { Form } from 'components/Form';\nimport { PrimaryButton } from 'components/PrimaryButton';\nimport { useForm } from 'react-hook-form';\nimport { FileInput } from 'components/FileInput';\nimport { useData } from 'context/DataContext';\n\nexport const Step3 = ({ history }) => {\n    const { data, setValues } = useData(); // наш контекст\n    const {\n        handleSubmit, // функция обработки данных при сабмите формы\n        control\n    } = useForm({\n        defaultValues: {\n            files: data.files\n        }\n    });\n    const onSubmit = (values) => {\n        setValues(values); // данные сохраняем в контекст на каждом шаге\n        history.push('/result');\n    };\n    return (\n        <MainContainer>\n            {' '}\n            {/* MainContainer — окошко панелька на которой все будет рендериться,\n         прямоугольник со скругелнными полями и тенью */ }\n            <Typography component=\"h2\" variant=\"h5\">Шаг 3</Typography>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <FileInput name=\"files\" control={control} />\n                <PrimaryButton>Дальше</PrimaryButton>\n                <PrimaryButton\n                    type=\"button\"\n                    onClick={() => history.push('/step2')}\n                    color=\"secondary\"\n                >\n                    Назад\n                </PrimaryButton>\n            </Form>\n\n        </MainContainer>\n    );\n};\n","import React, { useState } from 'react';\nimport {\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Typography\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { InsertDriveFile } from '@material-ui/icons';\nimport { MainContainer } from 'components/MainContainer';\nimport { useData } from 'context/DataContext';\nimport { PrimaryButton } from 'components/PrimaryButton';\nimport * as Swal from 'sweetalert2';\nimport Confetti from 'react-confetti';\n\nconst useStyles = makeStyles({\n    root: {\n        marginBottom: '30px'\n    },\n    table: {\n        marginBottom: '30px'\n    }\n});\n\nexport const Result = ({ history }) => {\n    const { data } = useData();\n    const [success, setSuccess] = useState(false); // state for Confetti\n    // entries будет хранить обычные поля формы без файлов\n    const entries = Object.entries(data).filter((entry) => entry[0] !== 'files');\n    const { files } = data; // чисто тока файлы\n    const styles = useStyles();\n    // отправка данных формы\n    const onSubmit = async () => {\n        const formData = new FormData();\n        if (data.files) {\n            data.files.forEach((file) => {\n                formData.append('files', file, file.name);\n            });\n            console.log('###: Files in formData= ', formData);\n        }\n        entries.forEach((entry) => {\n            formData.append(entry[0], entry[1]);\n        });\n        console.log('###: Send form data= ', formData);\n        const proxyCorsUrl = 'https://api.allorigins.win/get?url=';\n        const targetUrl = 'https://postman-echo.com/post';\n        const encodeURL = (url) => {\n            if (Object) return url;\n            return encodeURIComponent(url); // TODO: поиграться - не всегда срабатывало через кодирование url\n        };\n\n        const res = await fetch(`${proxyCorsUrl}${encodeURL(targetUrl)}`, {\n            method: 'POST',\n            body: formData,\n            headers: {\n                'Content-type': 'multipart/form-data; charset=UTF-8'\n            }\n        });\n\n        if (res.status === 200) {\n            setSuccess(true); // для запуска  конфетти\n            await Swal.fire('Урааа!!!', 'Данные успешно отправлены', 'success');\n        }\n    };\n\n    if (success) return <Confetti />;\n    return (\n        <MainContainer>\n            <Typography component=\"h2\" variant=\"h5\">\n                <span role=\"img\" aria-label=\"emoji\">📋</span>\n                {' '}\n                Проверьте Ваши данные\n            </Typography>\n            <TableContainer className={styles.root} component={Paper}>\n                <Table className={styles.table}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>\n                                Наименование\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                Значение\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            entries.map((entry) => (\n                                <TableRow key={entry[0]}>\n                                    <TableCell>{ entry[0] }</TableCell>\n                                    <TableCell align=\"right\">{ entry[1].toString() }</TableCell>\n                                </TableRow>\n                            ))\n                        }\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            {\n                files && (\n                    <>\n                        <Typography component=\"h2\" variant=\"h5\">\n                            <span role=\"img\" aria-label=\"emoji\">📦</span>\n                            {' '}\n                            Files\n                        </Typography>\n                        <List>\n                            {\n                                files.map((f, index) => (\n                                    <ListItem key={f.name + index}>\n                                        <ListItemIcon>\n                                            <InsertDriveFile />\n                                        </ListItemIcon>\n                                        <ListItemText primary={f.name} secondary={f.size} />\n                                    </ListItem>\n                                ))\n                            }\n                        </List>\n                    </>\n                )\n            }\n            <PrimaryButton\n                    onClick={onSubmit}\n            >\n                Отправить\n            </PrimaryButton>\n            <PrimaryButton\n                    type=\"button\"\n                    onClick={() => history.push('/step3')}\n                    color=\"secondary\"\n            >\n                Назад\n            </PrimaryButton>\n        </MainContainer>\n    );\n};\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { useData } from 'context/DataContext';\n\n// создаем хук для стилей\nconst useStyles = makeStyles((theme) => ({\n    // theme -темная /светлая темы\n    root: {\n        fontFamily: 'Permanent Marker',\n        margin: theme.spacing(3, 0, 2), // отсупы сетки\n        textAlign: 'center',\n        fontSize: '20px',\n        color: 'deeppink',\n        textShadow: '1px 1px darkmagenta'\n    }\n}));\nexport const Footer = () => {\n    const styles = useStyles();\n    const { resetState } = useData(); // наш контекст со стейтом\n    return (\n        <Typography className={styles.root} component=\"h3\" variant=\"h3\">\n            {/* компонент управления стилями */}\n            <Link to=\"/\" onClick={resetState}>Сбросить все и начать сначала</Link>\n        </Typography>\n    );\n};\n","import React from 'react';\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\nimport Header from 'components/Header';\nimport { Step1 } from 'components/Step1';\nimport { Step2 } from 'components/Step2';\nimport { Step3 } from 'components/Step3';\nimport { Result } from 'components/Result';\nimport { Footer } from 'components/Footer';\n\nfunction App() {\n    return (\n        <>\n            <Header />\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" component={Step1} />\n                    <Route path=\"/step2\" component={Step2} />\n                    <Route path=\"/step3\" component={Step3} />\n                    <Route path=\"/result\" component={Result} />\n                </Switch>\n                <Footer />\n            </Router>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport { DataProvider } from 'context/DataContext';\nimport './index.css';\n\n\nReactDOM.render(\n  <DataProvider>\n    <App />\n  </DataProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}